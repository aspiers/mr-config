# -*- mode: sh -*-

# Note that ~/.config/mr/bootstrap.sh will check out mr
# in its own way, completely independently of this.  So
# changing this has limited impact on the earlier parts
# of the bootstrap sequence (although it would make sense
# to run remotes and fixups on this repository later on).
[$HOME/.GIT/3rd-party/mr]
lib = set_git_clone_name kitenet-mr
checkout = github_clone
remotes =
    auto_remotes
    git_add_remote origin git://git.kitenet.net/mr
fixups =
    git_config_email
    for exe in mr mrdir mr-recache; do
        ep="$MR_REPO/$exe"
        [ -x "$ep" ] && ln -sf "$ep" ~/bin
    done
    ensure_symlink_exists ~/bin/mrname mrdir
    # FIXME: This has been known to break during bootstrapping,
    # probably due to ~/.zsh/functions somehow being a symlink to
    # within shell-env.  I don't understand why though, because
    # ANTIFOLD is checked out before shell-env and should prevent
    # that.
    for fn in mrcd _mr _mr_repositories; do
        fp="$MR_REPO/zsh/$fn"
        [ -e "$fp" ] && ln -sf "$fp" ~/.zsh/functions
    done
    zsh -c zrec

[$HOME/software/scm/stow]
name = stow-release
lib = mr_set_download_url http://ftp.gnu.org/gnu/stow/stow-latest.tar.bz2
checkout = mr_download_checkout
fixups =
    cd "$MR_REPO"
    ./configure --prefix=$HOME
    make install

[$HOME/.GIT/3rd-party/stow]
skip = lazy
checkout = github_clone
# STOW_COMMAND would avoid a chicken-and-egg issue finding stow
# if we used stow to install itself, but since moving it into
# its own package, we just use make install, so this is no longer
# needed.
#lib = export STOW_COMMAND="$MR_REPO/stow"

remotes = auto_remotes && savannah_rw_remote

fixups =
    zypper_install perl-{Module-Build,IO-stringy,Test-Output}
    cd "$MR_REPO"
    autoreconf -iv
    ./configure --prefix=$HOME
    make install

# Is cfgctl still needed early on?  I suspect not.
[$HOME/.GIT/adamspiers.org/META]
deleted = true
[$HOME/.GIT/adamspiers.org/cfgctl]
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

# Needed for many things including lib/libhooks.sh, lib/perl5/Sh.pm
[$HOME/.GIT/adamspiers.org/shell-env]
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true
fixups =
    setup_git_autocommit_and_annex_autosync

[$HOME/.GIT/adamspiers.org/git]
name = git-config
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

# This one required to stop stow folding some high-level
# directories which are safer left unfolded (in case I
# accidentally put new files in there and they unintentionally go
# in a package directory).
[$HOME/.GIT/adamspiers.org/ANTIFOLD]
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/adamspiers.org/shell-env.adam_spiers.pub]
checkout = git_clone_my_repo
skip = default_skipper || user_not_adam
remotes = auto_remotes
stowable = true

[$HOME/.GIT/adamspiers.org/shell-env.adam_spiers.sec]
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

# needs lib/perl5/Sh.pm
[$HOME/.GIT/adamspiers.org/ssh]
lib = set_git_clone_name ssh-config
skip = default_skipper || missing_exe ssh
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/adamspiers.org/ssh.adam_spiers.sec]
skip = default_skipper || missing_exe ssh
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/3rd-party/dvcs-autosync]
skip = lazy
lib = set_git_clone_remote gitorious
checkout = git_clone git@gitorious.org:~aspiers/dvcs-autosync/aspiers-dvcs-autosync.git
remotes =
    auto_remotes
    git_add_remotes "
        origin    git://gitorious.org/dvcs-autosync/dvcs-autosync.git
        giel      git://gitorious.org/~Giel/dvcs-autosync/giels-dvcs-autosync.git"
fixups =
    cd "$MR_REPO"
    # https://bugzilla.novell.com/show_bug.cgi?id=658604
    # --home doesn't work on openSUSE
    #python setup.py install --home ~
    python setup.py install --prefix=$HOME/.local
    # http://docs.python.org/distutils/apiref.html
    libdir=$( python -c 'from distutils.sysconfig import get_python_lib; import os; print get_python_lib(False, False, os.getenv("HOME"))' )
    cp jabberbot.py "$libdir"
    #
    # for openSUSE add devel:languages:python
    #sudo zypper ar http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_12.1/devel:languages:python.repo
    #zypper_install python-xmpppy
    #
    # for Fedora:
    # yum install python-xmpp
