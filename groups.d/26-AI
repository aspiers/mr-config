# -*- mode: sh -*-

[$HOME/.GIT/adamspiers.org/ai-config]
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/3rd-party/opencode]
checkout = github_clone
remotes = auto_remotes
stowable = true
lib =
    set_git_origin_user sst
fixups =
    source ~/.nvm/nvm.sh
    nvm use 20
    npm install -g bun
    bun install
    script=~/bin/oc
    node=$( nvm which 20 )
    cat <<EOF >$script
    #!/bin/bash
    # Auto-generated by mrf $MR_NAME at `date`

    $node run \\
        $MR_REPO/packages/opencode/src/index.ts "\$@"
    EOF
    chmod +x $script

[$HOME/.GIT/3rd-party/gemini-cli]
checkout = github_clone
remotes = auto_remotes
lib =
    set_git_origin_user google-gemini
    # Needs to be one of the emails configured in my Google account
    # so that Google's CLA signing process works.
    set_email github@adamspiers.org
fixups =
    source ~/.nvm/nvm.sh
    nvm use 22
    npm install
    export GEMINI_SANDBOX=docker
    npm run build:all
    script=~/bin/gm
    node=`nvm which 22`
    cat <<EOF >$script
    #!/bin/bash
    # Auto-generated by mrf $MR_NAME at `date`

    export GEMINI_SANDBOX=docker
    $node "$MR_REPO/packages/cli" "\$@"
    EOF
    chmod +x $script

[$HOME/.GIT/3rd-party/claude-agents]
checkout = github_clone
remotes = auto_remotes
# stowable = true
lib =
    set_git_origin_user wshobson
    set_git_origin_name agents
    # export STOW_PKG_TYPE=symlink
    # export STOW_SOURCE_PATH="$MR_REPO"
    # export STOW_TARGET=$HOME/.claude/agents
    # mr_init_stow_package
fixups =
    # cat <<EOF > $MR_REPO/.stow-local-ignore
    # code-reviewer.md
    # EOF
    # mkdir ~/.STOW/$MR_NAME
    for agent in *.md; do
        case "$agent" in
            README.md|unity*|code-reviewer.md)
                continue
                ;;
        esac

        # ln -s $MR_REPO/$agent ~/.STOW/$MR_NAME/$agent
        # cp $MR_REPO/$agent ~/.STOW/$MR_NAME/$agent
        ln -sf $MR_REPO/$agent ~/.claude/agents/$agent
    done
