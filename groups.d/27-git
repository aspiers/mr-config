# -*- mode: sh -*-

# [$HOME/.GIT/adamspiers.org/git] is in 00-boot

[$HOME/.GIT/3rd-party/git]
skip = lazy || default_skipper || missing_exe git
checkout = github_clone
remotes =
    auto_remotes
    git_add_remotes "
        junio      git://github.com/gitster/git.git
        jonseymour git://github.com/jonseymour/git.git
        git        git://github.com/git/git.git
    "
stowable = true
lib =
    mr_init_stow_package
    # git's Makefiles don't do uninstall
    mr_post_stow () {
        if which docbook2x-texi >/dev/null 2>&1; then
            make install-info prefix=$HOME
        fi
    }

fixups =
    zypper_install asciidoc
    cd "$MR_REPO"
    ionice -c 3 \
    nice -n15 \
        make ${MAKE_FLAGS--j} install \
            prefix=$STOW_PKG_PATH ${CFLAGS:+CFLAGS="$CFLAGS"}
    if which asciidoc >/dev/null 2>&1; then
        if which xmlto >/dev/null 2>&1; then
            make ${MAKE_FLAGS--j} install-doc prefix=$STOW_PKG_PATH ${CFLAGS:+CFLAGS="$CFLAGS"}
        else
            echo "asciidoc installed but not xmlto; skipping install-doc"
        fi
    else
        echo "asciidoc not installed; skipping install-doc"
    fi
    for exe in \
        contrib/diff-highlight/diff-highlight \
        contrib/remote-helpers/git-remote-{bzr,hg}
    do
        ln -sf $MR_REPO/$exe $STOW_PKG_PATH/bin
    done
    ( cd contrib/subtree && make prefix=$STOW_PKG_PATH install install-doc )
    mr_restow_regardless

[$HOME/.GIT/adamspiers.org/git.adam_spiers.pub]
skip = default_skipper
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true
# FIXME: Can't have this because it stops cfg-post hook?!
# fixups =
#     mr_restow_regardless

[$HOME/.GIT/adamspiers.org/github.sec]
skip = lazy || default_skipper
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/3rd-party/willgit]
skip = default_skipper || missing_exe git || missing_exe ruby
checkout = git_clone git://gitorious.org/willgit/mainline.git
fixups = ln -sf $MR_REPO/bin/git-wtf ~/bin

[$HOME/.GIT/3rd-party/topgit]
skip = default_skipper || missing_exe git
checkout = git_clone git://repo.or.cz/topgit.git
fixups = make install
remotes =
    auto_remotes
    for user in deepfire 4z3 imz greenrd
    do
        github_readonly_remote $user
    done

[$HOME/.GIT/3rd-party/hub]
skip = default_skipper || missing_exes git go
lib =
    set_git_origin_user github
checkout = github_clone
fixups =
    export GOPATH=~/software/go
    echo "FIXME: hub compilation doesn't work" >&2
    #./script/build
    #cp hub ~/bin
remotes = auto_remotes

[$HOME/software/scm/hub]
skip = default_skipper || missing_exe git
name = hub-bin
lib =
    mr_init_stow_package
    export STOW_PKG_TYPE=symlink
    mr_set_download_url \
        https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz
checkout = mr_download_checkout
stowable = true
fixups =
    cd "$MR_REPO"
    mkdir -p bin
    if [ -e hub ]; then
        mv hub bin
    fi
    mr_restow_regardless

[$HOME/.GIT/3rd-party/mhs-tidbits]
skip = default_skipper || missing_exe git
lib =
    mr_init_stow_package
    set_git_clone_name tidbits
    set_git_origin_user mhs
checkout = github_clone
remotes = auto_remotes
fixups =
    ln -sf $MR_REPO/lib/git-unmerged.rb ~/bin/git-unmerged

[$HOME/.GIT/3rd-party/libgit2]
skip = default_skipper || missing_exe git
stowable = true
lib =
    mr_init_stow_package
    set_git_origin_user libgit2
    # pygit2 needs to build against a release, not latest master:
    # https://github.com/libgit2/pygit2/issues/612#issuecomment-201813187
    set_git_clone_remote_branch v0.24.1
checkout = github_clone
remotes = auto_remotes
fixups =
    cd "$MR_REPO"
    # https://libgit2.github.com/docs/guides/build-and-link/
    mkdir -p build
    cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX=$STOW_PKG_PATH && \
        cmake --build . --target install
    mr_restow_regardless

[$HOME/.GIT/3rd-party/pygit2]
skip = default_skipper || missing_exe git || lazy
stowable = true
lib =
    mr_init_stow_package
    set_git_origin_user libgit2
checkout = github_clone
remotes = auto_remotes
fixups =
    cd "$MR_REPO"
    # http://www.pygit2.org/install.html
    export LIBGIT2=$HOME # tell pygit2 where to find libgit2
    # -rpath prevents the need to put $LIBGIT2/lib in LD_LIBRARY_PATH
    export LDFLAGS="-Wl,-rpath='$LIBGIT2/lib',--enable-new-dtags"
    python setup.py install \
        --prefix $STOW_PKG_PATH/.local
    mr_restow_regardless

[$HOME/.GIT/3rd-party/git-when-merged]
skip = default_skipper || missing_exe git
checkout = github_clone
lib =
    set_git_origin_user mhagger
fixups =
    ln -sf $MR_REPO/bin/$MR_NAME ~/bin/$MR_NAME
remotes = auto_remotes

[$HOME/.GIT/adamspiers.org/git-deps]
skip = default_skipper || missing_exe git
#stowable = true
checkout = github_clone
lib =
    set_email git@adamspiers.org
    #mr_init_stow_package
remotes = auto_remotes
fixups =
    #PYTHONUSERBASE=$STOW_PKG_PATH pip install --user -e .
    pip install --user -e .
    python setup.py install_data -d ~/.local
    ln -sf ~/.local/share/git_deps/gitfile-handler.desktop \
       ~/.local/share/applications
    xdg-mime default gitfile-handler.desktop x-scheme-handler/gitfile

[$HOME/.GIT/3rd-party/github3.py]
skip = lazy || default_skipper || missing_exe python
stowable = true
lib =
    set_git_origin_user sigmavirus24
    mr_init_stow_package
checkout = github_clone
remotes = auto_remotes
fixups =
    python setup.py install \
        --prefix $STOW_PKG_PATH/.local
    # python setup.py install \
    #     --single-version-externally-managed \
    #     --record=$STOW_PKG_PATH/$MR_NAME-install.log \
    #     --prefix $STOW_PKG_PATH/.local
    mr_restow_regardless

[$HOME/.GIT/adamspiers.org/git-explode]
skip = default_skipper || missing_exe git
checkout = github_clone
lib =
    set_email git@adamspiers.org
remotes = auto_remotes
fixups =
    pip install --user -e .

[$HOME/.GIT/adamspiers.org/github-notifications]
skip = missing_dir $HOME/.GIT/adamspiers.org/mutt
checkout = git_clone_my_repo
remotes = auto_remotes
lib =
    set_email git@adamspiers.org
fixups =
    ensure_symlink_exists $HOME/bin/github-notifications "$MR_REPO/github-notifications"

[$HOME/.GIT/adamspiers.org/aspiers.github.io]
skip = default_skipper || missing_exe git
checkout = github_clone
lib =
    set_email github@adamspiers.org
remotes = auto_remotes

[$HOME/.GIT/3rd-party/git-series]
skip = default_skipper || missing_exes git
stowable = true
lib =
    mr_init_stow_package
    set_git_origin_user github
checkout = github_clone
fixups =
    cargo install --root $STOW_PKG_PATH
    # To install from upstream
    #cargo install --root $STOW_PKG_PATH $MR_NAME
remotes = auto_remotes

[$HOME/.GIT/adamspiers.org/london-git-automagic-may-2018]
skip = lazy
lib =
    set_email git@adamspiers.org
checkout = github_clone
remotes =
    auto_remotes
    github_readonly_remote presentation-template aspiers presentation-template
    github_readonly_remote self-healing aspiers openstack-meetup-london-march-2018-self-healing

[$HOME/.GIT/adamspiers.org/denver-git-automagic-sept-2018]
skip = lazy
lib =
    set_email git@adamspiers.org
checkout = github_clone
remotes =
    auto_remotes
    git_add_remote presentation-template ~/.GIT/3rd-party/presentation-template
    github_readonly_remote github-presentation-template aspiers presentation-template
    github_readonly_remote london-git aspiers london-git-automagic-may-2018
fixups =
    ensure_symlink_exists ~/public_html/$MR_NAME $MR_REPO

[$HOME/.GIT/adamspiers.org/nashville-git-automagic-april-2019]
skip = lazy
lib =
    set_email git@adamspiers.org
checkout = github_clone
remotes =
    auto_remotes
    git_add_remote presentation-template ~/.GIT/3rd-party/presentation-template
    github_readonly_remote github-presentation-template aspiers presentation-template
    github_readonly_remote london-git aspiers london-git-automagic-may-2018
    github_readonly_remote denver-git aspiers denver-git-automagic-sept-2018
fixups =
    ensure_symlink_exists ~/public_html/$MR_NAME $MR_REPO

[$HOME/.GIT/3rd-party/git.github.io]
skip = lazy
lib =
    set_git_origin_user git
    set_email git@adamspiers.org
checkout = github_clone
remotes =
    auto_remotes

[$HOME/.GIT/3rd-party/git-related]
skip = lazy
lib =
    set_git_origin_user felipec
    set_email git@adamspiers.org
checkout = github_clone
remotes =
    auto_remotes
fixups =
    ensure_symlink_exists ~/bin/git-related $MR_REPO/git-related

[$HOME/.GIT/3rd-party/kal-shlib-core]
skip = lazy
checkout = github_clone
stowable = true
lib =
    set_git_origin_user vaab
    mr_init_stow_package
fixups =
    if ! [ -e configure ]; then
        bash ./autogen.sh
    fi
    export STOW_COMMAND="sudo stow"
    export STOW_TARGET=/
    set_stow_common_opts
    ./configure --prefix=$STOW_PKG_PATH --libdir=$STOW_PKG_PATH/lib
    make install prefix=$STOW_PKG_PATH
    #sudo stow -d ~/.STOW -t / $MR_NAME
    mr_restow_regardless
remotes = auto_remotes

[$HOME/.GIT/3rd-party/kal-shlib-common]
skip = lazy
checkout = github_clone
stowable = true
lib =
    set_git_origin_user vaab
    mr_init_stow_package
fixups =
    if ! [ -e configure ]; then
        bash ./autogen.sh
    fi
    export STOW_COMMAND="sudo stow"
    export STOW_TARGET=/usr
    set_stow_common_opts
    ./configure --prefix=$STOW_PKG_PATH --libdir=$STOW_PKG_PATH/lib
    make install prefix=$STOW_PKG_PATH
    #sudo stow -d ~/.STOW -t / $MR_NAME
    mr_restow_regardless
remotes = auto_remotes

[$HOME/.GIT/3rd-party/kal-shlib-pretty]
skip = lazy
checkout = github_clone
stowable = true
lib =
    set_git_origin_user vaab
    mr_init_stow_package
fixups =
    if ! [ -e configure ]; then
        bash ./autogen.sh
    fi
    export STOW_COMMAND="sudo stow"
    export STOW_TARGET=/usr
    set_stow_common_opts
    ./configure --prefix=$STOW_PKG_PATH --libdir=$STOW_PKG_PATH/lib
    make install prefix=$STOW_PKG_PATH
    #sudo stow -d ~/.STOW -t / $MR_NAME
    mr_restow_regardless
remotes = auto_remotes

[$HOME/.GIT/3rd-party/git-irebase]
skip = lazy
checkout = github_clone
stowable = true
lib =
    set_git_origin_user 0k
fixups =
    ensure_symlink_exists ~/bin/git-irebase $MR_REPO/bin/git-irebase
remotes = auto_remotes

[$HOME/.GIT/3rd-party/git-reviewers]
skip = lazy
checkout = github_clone
stowable = true
lib =
    set_git_origin_user johnnadratowski
fixups =
    pip install --user -e .
remotes = auto_remotes

[$HOME/.GIT/3rd-party/palaver]
skip = lazy
checkout = github_clone
lib =
    set_git_origin_user markmc
fixups =
    cat <<EOF > ~/bin/palaver
    #!/bin/sh
    export GIT_NOTES_REF=refs/notes/palaver
    #export PATH=$PATH:$MR_REPO/bin
    export PYTHONPATH=$PYTHONPATH:$MR_REPO
    python2 $MR_REPO/bin/palaver "$@"
    EOF
    chmod +x ~/bin/palaver
remotes = auto_remotes

[$HOME/.GIT/3rd-party/git-assembler]
skip = lazy
checkout = gitlab_clone
stowable = true
lib =
    set_git_origin_user wavexx
fixups =
    ensure_symlink_exists $HOME/bin/git-assembler $MR_REPO/git-assembler
    git config --global alias.as assembler
remotes = auto_remotes
