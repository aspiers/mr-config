# -*- mode: sh -*-

# [$HOME/.GIT/adamspiers.org/git] is in 00-boot

[$HOME/.GIT/3rd-party/git]
skip = lazy || default_skipper || missing_exe git
checkout = github_clone
remotes =
    auto_remotes
    git_add_remotes "
        junio      git://github.com/gitster/git.git
        jonseymour git://github.com/jonseymour/git.git
        git        git://github.com/git/git.git
    "
stowable = true
lib =
    mr_init_stow_package
    # git's Makefiles don't do uninstall
    mr_post_stow () {
        if which docbook2x-texi >/dev/null 2>&1; then
            make install-info prefix=$HOME
        fi
    }

fixups =
    cat <<-EOF > ~/.emacs.d/init.d/as-git.el
    ;; Automatically generated via mr fixups for $MR_REPO; do not edit!

    (require 'as-find-file-matching-regexp-hook)

    (add-to-list 'as-find-file-matching-regexp-alist
        '("/.GIT/3rd-party/git/" . (lambda () (setq indent-tabs-mode t))))

    (provide 'as-git)
    EOF
    cd "$MR_REPO"
    nice -n15 make ${MAKE_FLAGS--j2} install prefix=$STOW_PKG_PATH ${CFLAGS:+CFLAGS="$CFLAGS"}
    if which asciidoc >/dev/null 2>&1; then
        if which xmlto >/dev/null 2>&1; then
            make ${MAKE_FLAGS--j} install-doc prefix=$STOW_PKG_PATH ${CFLAGS:+CFLAGS="$CFLAGS"}
        else
            echo "asciidoc installed but not xmlto; skipping install-doc"
        fi
    else
        echo "asciidoc not installed; skipping install-doc"
    fi
    for exe in \
        contrib/diff-highlight/diff-highlight \
        contrib/remote-helpers/git-remote-{bzr,hg}
    do
        ln -sf $MR_REPO/$exe $STOW_PKG_PATH/bin
    done
    ( cd contrib/subtree && make prefix=$STOW_PKG_PATH install install-doc )
    mr_restow_regardless

[$HOME/.GIT/adamspiers.org/git.adam_spiers.pub]
skip = default_skipper
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true
# FIXME: Can't have this because it stops cfg-post hook?!
# fixups =
#     mr_restow_regardless

[$HOME/.GIT/adamspiers.org/github.sec]
skip = lazy || default_skipper
checkout = git_clone_my_repo
remotes = auto_remotes
stowable = true

[$HOME/.GIT/3rd-party/willgit]
skip = default_skipper || missing_exe git || missing_exe ruby
checkout = git_clone git://gitorious.org/willgit/mainline.git
fixups = ln -sf $MR_REPO/bin/git-wtf ~/bin

[$HOME/.GIT/3rd-party/topgit]
skip = default_skipper || missing_exe git
checkout = git_clone git://repo.or.cz/topgit.git
fixups = make install
remotes =
    auto_remotes
    for user in deepfire 4z3 imz greenrd
    do
        github_readonly_remote $user
    done

[$HOME/.GIT/3rd-party/hub]
skip = default_skipper || missing_exes git go
checkout = git_clone git://github.com/github/hub.git
lib =
    set_git_origin_user github
fixups =
    ./script/build
    cp hub ~/bin
    # curl http://hub.github.com/standalone -sLo ~/bin/hub &&
    #   chmod +x ~/bin/hub
remotes = auto_remotes

[$HOME/software/scm/hub]
skip = default_skipper || missing_exe git
name = hub-bin
lib =
    export STOW_PKG_TYPE=symlink
    mr_init_stow_package
    mr_set_download_url \
        https://github.com/github/hub/releases/download/v2.2.1/hub-linux-amd64-2.2.1.tar.gz
checkout = mr_download_checkout
stowable = true
fixups =
    # FIXME: fixups doesn't use lib?
    export STOW_PKG_TYPE=symlink
    cd "$MR_REPO"
    mkdir -p bin
    if [ -e hub ]; then
        mv hub bin
    fi
    mr_restow_regardless

[$HOME/.GIT/3rd-party/mhs-tidbits]
skip = default_skipper || missing_exe git
lib =
    mr_init_stow_package
    set_git_clone_name tidbits
    set_git_origin_user mhs
checkout = github_clone
remotes = auto_remotes
fixups =
    ln -sf $MR_REPO/lib/git-unmerged.rb ~/bin/git-unmerged

[$HOME/.GIT/3rd-party/libgit2]
skip = default_skipper || missing_exe git
stowable = true
lib =
    mr_init_stow_package
    set_git_origin_user libgit2
    # pygit2 needs to build against a release, not latest master:
    # https://github.com/libgit2/pygit2/issues/612#issuecomment-201813187
    set_git_clone_remote_branch v0.24.1
checkout = github_clone
remotes = auto_remotes
fixups =
    cd "$MR_REPO"
    # https://libgit2.github.com/docs/guides/build-and-link/
    mkdir -p build
    cd build && \
        cmake .. -DCMAKE_INSTALL_PREFIX=$STOW_PKG_PATH && \
        cmake --build . --target install
    mr_restow_regardless

[$HOME/.GIT/3rd-party/pygit2]
skip = default_skipper || missing_exe git || lazy
stowable = true
lib =
    mr_init_stow_package
    set_git_origin_user libgit2
checkout = github_clone
remotes = auto_remotes
fixups =
    cd "$MR_REPO"
    # http://www.pygit2.org/install.html
    export LIBGIT2=$HOME # tell pygit2 where to find libgit2
    # -rpath prevents the need to put $LIBGIT2/lib in LD_LIBRARY_PATH
    export LDFLAGS="-Wl,-rpath='$LIBGIT2/lib',--enable-new-dtags"
    python setup.py install \
        --old-and-unmanageable \
        --prefix $STOW_PKG_PATH
    mr_restow_regardless

[$HOME/.GIT/3rd-party/git-when-merged]
skip = default_skipper || missing_exe git
checkout = github_clone
lib =
    set_git_origin_user mhagger
fixups =
    ln -sf $MR_REPO/bin/$MR_NAME ~/bin/$MR_NAME
remotes = auto_remotes

[$HOME/.GIT/adamspiers.org/git-deps]
skip = default_skipper || missing_exe git
stowable = true
checkout = github_clone
lib =
    set_email git@adamspiers.org
    mr_init_stow_package
remotes = auto_remotes
fixups =
    # ln -sf $MR_REPO/$MR_NAME.py ~/bin/$MR_NAME
    # ln -sf $MR_REPO/gitfile-handler ~/bin
    # ln -sf $MR_REPO/gitfile-handler.desktop ~/.local/share/applications
    python setup.py install \
        --old-and-unmanageable \
        --prefix $STOW_PKG_PATH
    xdg-mime default gitfile-handler.desktop x-scheme-handler/gitfile

[$HOME/.GIT/3rd-party/github3.py]
skip = lazy || default_skipper || missing_exe python
stowable = true
lib =
    set_git_origin_user sigmavirus24
    mr_init_stow_package
checkout = github_clone
remotes = auto_remotes
fixups =
    python setup.py install \
        --old-and-unmanageable \
        --prefix $STOW_PKG_PATH
    # python setup.py install \
    #     --single-version-externally-managed \
    #     --record=$STOW_PKG_PATH/$MR_NAME-install.log \
    #     --prefix $STOW_PKG_PATH
    mr_restow_regardless
