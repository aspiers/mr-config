lib =
    MR_GIT=$HOME/.GIT
    GIT_MY_ROOT=$MR_GIT/adamspiers.org
    MY_UPSTREAM_HOST=adamspiers.org
    GIT_MY_UPSTREAM=ssh://$MY_UPSTREAM_HOST/home/adam/.GIT/adamspiers.org
    GIT_UPSTREAM_ROOT=$MR_GIT/3rd-party
    #
    # syntactic sugar
    git_clone () {
        git clone "$1" "$MR_REPO"
        ( cd "$MR_REPO" && git_email "${2:-$MR_NAME}" )
    }
    #
    git_email () {
        email="$1@adamspiers.org"
        git config user.email "$email"
        info "Set user.email to $email"
    }
    git_clone_my_repo () {
        info "Cloning from $GIT_MY_UPSTREAM/$MR_NAME"
        git clone "$GIT_MY_UPSTREAM/$MR_NAME" "$MR_REPO"
        cd "$MR_REPO"
        git_email dotfiles
    }
    #
    moosehall_git_checkout () {
        if [ $# != 2 ]; then
            error "Usage: moosehall_git_checkout HUB-HOST REPO"
        fi
        hub="$1"
        repo="$2"
        if [ "$hub" = "$localhost_nickname" ]; then
            if ! [ -d "$MR_REPO" ]; then
                error "This machine is supposed to be the hub for $MR_REPO but it didn't exist!"
            fi
        else
            git_clone ssh://$hub/home/adam/.GIT/$repo
        fi
    }
    #
    git_add_remotes () {
        cd "$MR_REPO"
        while read remote url exception; do
            if [ "$LOCALHOST_NICKNAME" = "$exception" ]; then
                warning "Won't add remote $url for $exception"
            else
                git remote add "$remote" "$url"
                info "Added remote $remote -> $url"
            fi
        done
    }
