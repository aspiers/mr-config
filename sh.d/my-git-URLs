# -*- mode: sh -*-

# Here 'origin' refers to the original remote from which mine was
# forked, not the repo from which the local one was cloned.  In these
# cases where I have a fork, the clone will be from my fork (and the
# name will be set to something like 'github' or 'gitorious'), and the
# 'origin' remote will point to the upstream repository.

my_upstream_url () {
    echo "${GIT_MY_UPSTREAM}${MR_NAME}.git"
}

savannah_ro_url () {
    echo "git://git.sv.gnu.org/${1:-$MR_NAME}.git"
}

savannah_rw_url () {
    echo "savannah:${1:-$MR_NAME}.git"
}

gitorious_clone_url () {
    echo "gitorious:`git_clone_name`.git"
}

github_clone_url () {
    echo "github:`git_clone_name`.git"
}

gitorious_origin_url () {
    gitorious_readonly_url "$MR_GIT_ORIGIN_USER"
}

github_origin_url () {
    github_readonly_url "$MR_GIT_ORIGIN_USER"
}

github_origin_rw_url () {
    github_readwrite_url "$MR_GIT_ORIGIN_RW_USER"
}

gitorious_readonly_url () {
    echo "git://gitorious.org/$1/${2:-`git_clone_name`}.git"
}

# For use when adding origin or auxiliary remotes
github_readonly_url () {
    echo "git://github.com/$1/${2:-`git_clone_name`}.git"
}

# For use when adding origin or auxiliary remotes
github_readwrite_url () {
    echo "git@github.com:$1/${2:-`git_clone_name`}.git"
}

# This is the name of the user who owns the repo to which
# we are going to point the "origin" remote.  This will be
# used by service-specific code for multiple services, but
# that's OK, because we can only ever have one 'origin'
# remote per repo.
set_git_origin_user () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked set_git_origin_user $*"
        exit 1
    fi

    MR_GIT_ORIGIN_USER="$1"
}

# Same as above, but for when we have write access to the origin
# and want to be able to push to it.
set_git_rw_origin_user () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked set_git_rw_origin $*"
        exit 1
    fi

    MR_GIT_ORIGIN_RW_USER="$1"
}
