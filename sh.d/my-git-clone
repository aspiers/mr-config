# -*- mode: sh -*-

# This is the name of the remote which will point to the cloned repository.
set_git_clone_remote () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked set_git_clone_remote $*"
        exit 1
    fi

    MR_GIT_CLONE_REMOTE="$1"
}

# This is the name of the repository from which we are going to clone.
set_git_clone_name () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked set_git_clone_name $*"
        exit 1
    fi

    MR_GIT_CLONE_NAME="$1"
}

# Name of the remote repository, excluding the user / organisation.
git_clone_name () {
    echo "${MR_GIT_CLONE_NAME:-$MR_NAME}"
}

# Use this to clone a branch other than master.
set_git_clone_remote_branch () {
    if [ $# != 1 ]; then
        error "$MR_REPO: invoked set_git_clone_remote_branch $*"
        exit 1
    fi

    MR_GIT_CLONE_REMOTE_BRANCH="$1"
}

# Usage: git_clone URL
git_clone () {
    check_repo_name
    if [ -n "$2" ]; then
        error "$MR_REPO: 2nd arg to git_clone no longer supported"
        exit 1
    fi
    info "Cloning from $1"
    remote_opt=
    if [ -n "$MR_GIT_CLONE_REMOTE" ]; then
        remote_opt="-o $MR_GIT_CLONE_REMOTE"
        info "Default remote is $MR_GIT_CLONE_REMOTE"
    fi
    branch_opt=
    if [ -n "$MR_GIT_CLONE_REMOTE_BRANCH" ]; then
        branch_opt="-b $MR_GIT_CLONE_REMOTE_BRANCH"
        info "Default remote branch is $MR_GIT_CLONE_REMOTE_BRANCH"
    fi
    echo git clone $remote_opt $branch_opt "$1" "$MR_REPO"
    git clone $remote_opt $branch_opt "$1" "$MR_REPO"
    git_config_email
}

# Use this to clone my fork of a repository I don't have push access to.
github_clone () {
    _github_clone_my_fork "`github_clone_url`"
}

# Use this to clone my fork of a repository I have push access to.
github_rw_clone () {
    _github_clone_my_fork "`github_readwrite_url aspiers`"
}

_github_clone_my_fork () {
    # This assumes we're cloning my fork
    set_git_clone_remote github
    git_clone "$1"
}

# Use this to clone a repository I haven't forked but have push access to,
# e.g. a github wiki.
github_clone_rw_origin () {
    set_git_clone_remote origin
    git_clone "`github_origin_rw_url`"
}

gitorious_clone () {
    set_git_clone_remote gitorious
    git_clone `gitorious_clone_url`
}

savannah_ro_clone () {
    set_git_clone_remote savannah
    git_clone `savannah_ro_url "$@"`
}

git_clone_my_repo () {
    check_repo_name
    set_git_clone_remote adamspiers.org
    git_clone `my_upstream_url`
}

moosehall_git_checkout () {
    if [ $# -gt 2 ]; then
        error "Usage: moosehall_git_checkout [HUB-HOST [REPO]]"
    fi
    hub="${1:-pacific}"
    repo="${2:-${MR_REPO#$HOME/}}"
    read_localhost_nickname
    if [ "$hub" = "$localhost_nickname" ]; then
        if ! [ -d "$MR_REPO" ]; then
            error "This machine is supposed to be the hub for $MR_REPO but it didn't exist!"
        fi
    else
        set_git_clone_remote $hub
        git_clone $hub:$repo
    fi
}
