# -*- mode: sh -*-

savannah_ro_remote () {
    git_add_remote savannah `savannah_ro_url`
}

savannah_rw_remote () {
    git_add_remote savannah `savannah_rw_url`
}

github_clone_remote () {
    git_add_remote github `github_clone_url`
}

# usage: github_readonly_remote <REMOTE> [<USERNAME> [<REPONAME>]]
# NOTE: this uses a https:// URL (preferred over git:// these days).
# If the URL is invalid it will ask for a username.
github_readonly_remote () {
    remote="$1"
    username="${2:-$remote}"
    reponame="$3"
    git_add_remote "$remote" `github_readonly_url "$username" "$reponame"`
}

# usage: github_readwrite_remote <REMOTE> [<USERNAME> [<REPONAME>]]
# required for (even read-only) forks of private repositories
github_readwrite_remote () {
    remote="$1"
    username="${2:-$remote}"
    reponame="$3"
    git_add_remote "$remote" `github_readwrite_url "$username" "$reponame"`
    git config remote.pushDefault "$remote"
}

github_origin_remote () {
    git_add_remote origin `github_origin_url`
}

github_origin_rw_remote () {
    git_add_remote origin `github_origin_rw_url`
    git config remote.pushDefault origin
}

gitlab_clone_remote () {
    git_add_remote gitlab `gitlab_clone_url`
}

# usage: gitlab_readwrite_remote <REMOTE> [<USERNAME> [<REPONAME>]]
# required for (even read-only) forks of private repositories
gitlab_readwrite_remote () {
    remote="$1"
    username="${2:-$remote}"
    reponame="$3"
    git_add_remote "$remote" `gitlab_readwrite_url "$username" "$reponame"`
    git config remote.pushDefault "$remote"
}

gitlab_readonly_remote () {
    remote="$1"
    username="${2:-$remote}"
    reponame="$3"
    git_add_remote "$remote" `gitlab_readonly_url "$username" "$reponame"`
}

