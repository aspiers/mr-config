# -*- mode: sh -*-

set_confidential_repo () {
    if [ $# != 0 ]; then
        error "$MR_REPO: invoked set_confidential_repo $*"
        exit 1
    fi

    MR_CONFIDENTIAL_REPO=yes
}

set_public_repo () {
    if [ $# != 0 ]; then
        error "$MR_REPO: invoked set_public_repo $*"
        exit 1
    fi

    MR_CONFIDENTIAL_REPO=no
}

confidential_repo () {
    if [ "$MR_CONFIDENTIAL_REPO" = 'yes' ]; then
        debug_skippers "! Repo manually set as confidential via \$MR_CONFIDENTIAL_REPO"
        return 0 # true
    fi

    if [ "$MR_CONFIDENTIAL_REPO" = 'no' ]; then
        debug_skippers "! Repo manually set as public via \$MR_CONFIDENTIAL_REPO"
        return 1 # false
    fi

    check_repo_name

    case "$MR_NAME" in
        SUSE-dist)
            debug_skippers ". Work repo special-cased as public"
            return 1 # false
            ;;
    esac

    if SUSE_job_repo; then
        case "$MR_NAME" in
            *.pub)
                debug_skippers ". SUSE work repo but explicitly marked public"
                return 1 # false
                ;;
        esac

        debug_skippers "! SUSE work repo defaults to confidential"
        return 0 # true
    fi

    case "$MR_NAME" in
        *.sec)
            debug_skippers "! Repo auto-detected as confidential"
            return 0 # true
            ;;
        *)
            debug_skippers ". Repo is not confidential"
            return 1 # false
            ;;
    esac
}

SUSE_job_repo () {
    case "$MR_REPO" in
        SUSE-dist)
            return 1 # false
            ;;
        *novell*|*SUSE*|rapport)
            debug_skippers "! Repo auto-detected as related to SUSE job"
            return 0 # true
            ;;
        *)
            debug_skippers ". Repo is not related to SUSE job"
            return 1 # false
            ;;
    esac
}
