# -*- mode: sh -*-

set_confidential_repo () {
    if [ $# != 0 ]; then
        error "$MR_REPO: invoked set_confidential_repo $*"
        exit 1
    fi

    MR_CONFIDENTIAL_REPO=yes
}

set_public_repo () {
    if [ $# != 0 ]; then
        error "$MR_REPO: invoked set_public_repo $*"
        exit 1
    fi

    MR_CONFIDENTIAL_REPO=no
}

confidential_repo () {
    if [ "$MR_CONFIDENTIAL_REPO" = 'yes' ]; then
        debug_skippers "! Repo manually set as confidential via \$MR_CONFIDENTIAL_REPO"
        return 0 # true
    fi

    if [ "$MR_CONFIDENTIAL_REPO" = 'no' ]; then
        debug_skippers "! Repo manually set as public via \$MR_CONFIDENTIAL_REPO"
        return 1 # false
    fi

    check_repo_name

    if work_repo; then
        case "$MR_NAME" in
            *.pub)
            debug_skippers ". Work repo auto-detected as public"
            return 1 # false
            ;;
        esac

        debug_skippers "! Work repo defaults to confidential"
        return 0 # true
    fi

    case "$MR_NAME" in
        *.sec)
            debug_skippers "! Repo auto-detected as confidential"
            return 0 # true
            ;;
        *)
            debug_skippers ". Repo is not confidential"
            return 1 # false
            ;;
    esac
}

work_repo () {
    case "$MR_REPO" in
        *novell*|*SUSE*)
            debug_skippers "! Repo auto-detected as work-related"
            return 0 # true
            ;;
        *)
            debug_skippers ". Repo is not work-related"
            return 1 # false
            ;;
    esac
}
